#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'ravanello'

# Runs redis analyze
class Application
  def run
    router = Ravanello::YamlLoader.new(STDIN.read).call
    cursor = Ravanello::Redis::Cursor.new(redis, limit: redis_fetch_limit)
    statistics = Ravanello::Analyzer.new(router, cursor).call
    print(statistics)
    print_samples(statistics)
  end

  private

  def print(statistics)
    Ravanello::Formatter.new(statistics).call.each { |line| puts line }
  end

  def print_samples(statistics)
    return if statistics.data['*'].nil?
    puts 'Discard sample keys:'
    samples = (1..10).map { statistics.data['*'].samples.sample.name }.uniq
    samples.each { |sample| puts "\t#{sample}" }
  end

  def redis
    @redis ||= Redis.new(url: ENV['REDIS'])
  end

  def redis_fetch_limit
    fetch_limit = ENV['FETCH_LIMIT']
    fetch_limit.nil? || fetch_limit == '' ? nil : fetch_limit.to_i
  end
end

Application.new.run
